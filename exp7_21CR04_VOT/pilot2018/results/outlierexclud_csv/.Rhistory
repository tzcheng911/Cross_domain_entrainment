axis.ticks.x=element_blank())+
ylim(0, 70)+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.2 <- ggplot(q3.data, aes(x=pet, fill = pet, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
ylim(0, 70)+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.3 <- ggplot(q3.data, aes(x=sex, fill = sex, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
ylim(0, 70)+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, top = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=20,font=2)))
## Plot the political bias by three demographic factors (i.e. generation, pet and sex)
plot3c.1 <- ggplot(q3.data, aes(x=generation, fill = generation, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.2 <- ggplot(q3.data, aes(x=pet, fill = pet, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.3 <- ggplot(q3.data, aes(x=sex, fill = sex, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, top = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=14,font=2)))
## Plot the political bias by three demographic factors (i.e. generation, pet and sex)
plot3c.1 <- ggplot(q3.data, aes(x=generation, fill = generation, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.2 <- ggplot(q3.data, aes(x=pet, fill = pet, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
plot3c.3 <- ggplot(q3.data, aes(x=sex, fill = sex, y = political.bias))+
stat_summary(fun.y = mean, geom="bar")+
stat_summary(fun.data = mean_se, geom="errorbar", width=0.1)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_y_continuous('Political Bias', breaks=seq(0,60, by=5))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, top = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=12,font=1)))
?grid.arrange
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, left = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=12,font=1)))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, topleft = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=12,font=1)))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, lefttop = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=12,font=1)))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, top = textGrob("Figure 2: Political Bias by Each Demographic Factor",gp=gpar(fontsize=12,font=1)))
gridExtra::grid.arrange(plot3c.1, plot3c.2, plot3c.3, ncol=3, top = textGrob("Figure 2: Political Bias by Each Demographic Factor",x=0,hjust=0))
?corrplot
ans.1c = q1.data %>%
select(religion, education)
tbl_1c = table(ans.1c$religion,ans.1c$education)
chi = chisq.test(tbl_1c, correct=FALSE)
chi
plot.1c.1 <- corrplot(chi$observed, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Observed Counts of Education and Religion', tl.pos = 'full')
plot.1c.2 <-corrplot(chi$expected, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Expected Counts of Education and Religion', tl.pos = 'full')
ans.1c = q1.data %>%
select(religion, education)
tbl_1c = table(ans.1c$religion,ans.1c$education)
chi = chisq.test(tbl_1c, correct=FALSE)
chi
plot.1c.1 <- corrplot(chi$observed, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Observed Counts of Education and Religion', tl.pos = 'full', tl.cex = 12)
plot.1c.2 <-corrplot(chi$expected, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Expected Counts of Education and Religion', tl.pos = 'full', tl.cex = 12)
ans.1c = q1.data %>%
select(religion, education)
tbl_1c = table(ans.1c$religion,ans.1c$education)
chi = chisq.test(tbl_1c, correct=FALSE)
chi
plot.1c.1 <- corrplot(chi$observed, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Observed Counts of Education and Religion')
plot.1c.2 <-corrplot(chi$expected, is.cor = FALSE, mar=c(0,0,2,0),
title = 'Expected Counts of Education and Religion')
load(url('http://vulstats.ucsd.edu/data/shaferskelton.rdata'))
View(dat)
glimpse(dat)
library(tidyverse)
glimpse(dat)
aov(Error_Dist ~ Task * Mouse/Touchscreen * saccade_condition + Error(Subject_Initials/Task * Mouse/Touchscreen * saccade_condition))
dat %>%
aov(Error_Dist ~ Task * Mouse/Touchscreen * saccade_condition + Error(Subject_Initials/Task * Mouse/Touchscreen * saccade_condition))
dat %>%
aov(Error_Dist ~ Task * Mouse/Touchscreen * saccade_condition + Error(Subject_Initials/(Task * Mouse/Touchscreen * saccade_condition)))
View(dat)
aov(data=dat, Error_Dist ~ Task*Mouse/Touchscreen*saccade_condition + Error(Subject_Initials/(Task * Mouse/Touchscreen * saccade_condition)))
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * Mouse/Touchscreen * saccade_condition)))
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
dat = dat %>%
filter(!is.na())
filter(!is.na(dat))
filter?
)
?filter
dplyr::filter(!is.na(dat))
?dplyr::filter
dplyr::filter(dat,!is.na(dat))
dat %>% drop_na()
dat = dat %>%
drop_na()
dat = dat0
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
dat0 = dat
library(tidyverse)
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
load(url('http://vulstats.ucsd.edu/data/shaferskelton.rdata'))
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
dat0 = dat
dat = dat %>%
drop_na()
View(dat)
View(dat0)
dat %>%
filter(!is.na(Task))
dat = dat0
dat %>%
filter(!is.na(Task))
dat = dat %>%
filter(!is.na(Task))
dat = dat %>%
filter(!is.na(Task)) %>%
filter(!is.na(`Mouse/Touchscreen`))
dat = dat0
dat = dat %>%
filter(!is.na(Task)) %>%
filter(!is.na(`Mouse/Touchscreen`)) %>%
filter(!is.na(saccade_condition))
aov(data=dat, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
aov(data=dat0, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
dat = dat %>%
filter(Task = 'NaN'))
dat = dat %>%
filter(Task == 'NaN'))
dat = dat %>%
filter(Task == 'NaN')
dat = dat0
dat = dat %>%
filter(Task != 'NaN')
Task = select(dat, Task)
View(Task)
Error_Dist = select(dat, Error_Dist)
View(Error_Dist)
load(url('http://vulstats.ucsd.edu/data/shaferskelton.rdata'))
MT = select(dat, `Mouse/Touchscreen`)
saccade_condition = select(dat, saccade_condition)
View(MT)
View(saccade_condition)
View(MT)
View(saccade_condition)
saccade_condition[3]
saccade_condition
data = select(dat, Error_Dist,Task, `Mouse/Touchscreen`, saccade_condition)
View(data)
library(tidyverse)
load(url('http://vulstats.ucsd.edu/data/shaferskelton.rdata'))
data = select(dat, Error_Dist,Task, `Mouse/Touchscreen`, saccade_condition)
aov(data=data, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
data = select(dat, Subject_Initials, Error_Dist,Task, `Mouse/Touchscreen`, saccade_condition)
aov(data=data, Error_Dist ~ Task*`Mouse/Touchscreen`*saccade_condition + Error(Subject_Initials/(Task * `Mouse/Touchscreen` * saccade_condition)))
View(data)
summarize(data)
glimpse(data)
cpunt(data)
count(data)
count(data,Task)
count(data,Subject_Initials,Error_Dist,Task,`Mouse/Touchscreen`,saccade_condition)
summary(count(data,Subject_Initials,Error_Dist,Task,`Mouse/Touchscreen`,saccade_condition))
summarize(count(data,Subject_Initials,Error_Dist,Task,`Mouse/Touchscreen`,saccade_condition))
data %>%
count(Subject_Initials,Error_Dist,Task,`Mouse/Touchscreen`,saccade_condition)
data %>%
count(Subject_Initials,Task,`Mouse/Touchscreen`,saccade_condition)
data %>%
count(Subject_Initials)
View(data)
View(dat)
glimpse(dat)
data = select(Trial, dat, Subject_Initials, Error_Dist,Task, `Mouse/Touchscreen`, saccade_condition)
data %>%
count(Trial)
data = select(dat, Trial, Subject_Initials, Error_Dist,Task, `Mouse/Touchscreen`, saccade_condition)
data %>%
count(Trial)
data %>%
group_by(Subject_Initials,Task,`Mouse/Touchscreen`,saccade_condition)
## Reshape my data
library(tidyr)
setwd('/Users/tzu-hancheng/Google_Drive/Research/Papers/Time_perception/results/R')
##### Accuracy ####
Accdata = read.csv('/Users/tzu-hancheng/Google_Drive/Research/Papers/Time_perception/results/R/Accuracy.csv')
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
separate_Accdata <- separate(long_Accdata, BD, c("Comparison_onsets", "Delay_length"))
View(separate_Accdata)
View(long_Accdata)
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/pctpa.csv')
View(pctpa)
## Run repeated measure ANOVA
pctpa_F = summary(aov(AUC ~ Onset + Error(subject/Onset) , data = pctpa))
/On
## Run repeated measure ANOVA
pctpa_F = summary(aov(AUC ~ Onset + Error(subj/Onset) , data = pctpa))
View(pctpa_F)
pctpa_F
pctpa_early = filter(pctpa$Onset = 'Early')
pctpa_early = filter(pctpa$Onset == 'Early')
?filter
pctpa_early = pctpa %>%
filter(Onset == 'Early')
View(pctpa)
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
pctpa$Onset
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(pctpa$Onset == 'Early')
## Reshape my data
library(tidyr)
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results')
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/pctpa.csv')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(subj == 'Early')
pctpa
pctpa_early = pctpa %>%
select(Onset)
## Reshape my data
library(tidyr)
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results')
pctpa_early = pctpa %>%
select(Onset)
pctpa_ontime
?select
setwd('/Users/tzu-hancheng/Google_Drive/Research/Papers/Time_perception/results/R')
##### Accuracy ####
Accdata = read.csv('/Users/tzu-hancheng/Google_Drive/Research/Papers/Time_perception/results/R/Accuracy.csv')
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
separate_Accdata <- separate(long_Accdata, BD, c("Comparison_onsets", "Delay_length"))
# Simple main effect
Acc_Long = separate_Accdata %>%
filter(Delay_length =='Longdelay')
library(dplyr)
## Reshape my data
library(tidyr)
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results')
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/pctpa.csv')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
## Reshape my data
library(tidyr)
library(dplyr)
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/pctpa.csv')
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
View(pctpa_early)
p1 = t.test(pctpa_early$AUC,pctpa_ontime$AUC, paired = TRUE)
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
pctpa_ontime = pctpa %>%
filter(Onset == 'Ontime')
pctpa_late = pctpa %>%
filter(Onset == 'Late')
p1 = t.test(pctpa_early$AUC,pctpa_ontime$AUC, paired = TRUE)
p2 = t.test(pctpa_early$AUC,pctpa_late$AUC, paired = TRUE)
p3 = t.test(pctpa_ontime$AUC,pctpa_late$AUC, paired = TRUE)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3)
setwd("/Users/tzu-hancheng/Google_Drive/Research/cross-domain entrainment/results")
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[3] # which of the four parameters do you want
}
write.csv(EC, file = "Reflectionpoint.csv")
EC = as.numeric(unlist(EC))
EC
setwd("/Users/tzu-hancheng/Google_Drive/Research/cross-domain entrainment/results")
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
View(EC)
View(mydata)
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[3] # which of the four parameters do you want
}
# Code snippet
library(dr4pl)
library(tidyverse)
setwd("/Users/tzu-hancheng/Google_Drive/Research/cross-domain entrainment/results")
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[3] # which of the four parameters do you want
}
View(EC)
attempt$parameters[3]
n
EC[[n]] <-attempt$parameters[3]
View(EC)
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
View(EC)
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[3] # which of the four parameters do you want
}
View(EC)
write.csv(EC, file = "Reflectionpoint.csv")
EC = as.numeric(unlist(EC))
attempt$parameters[3]
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[4] # which of the four parameters do you want
}
attempt$parameters[4]
attempt
mydata = read.csv('pctpa.csv')
EC <- vector("list",nrow(mydata))
for (n in 1:nrow(mydata)){
a = mydata[n,3:8]
aa = t(a)
dummy <- data.frame(votstep = c(1,2,3,4,5,6), pctpa = aa[,1])
attempt<- dr4pl(dose = dummy$votstep,
response = dummy$pctpa,
method.init = "logistic")
EC[[n]] <-attempt$parameters[2] # which of the four parameters do you want
}
write.csv(EC, file = "Reflectionpoint.csv")
EC = as.numeric(unlist(EC))
write.csv(EC, file = "Reflectionpoint.csv")
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/pctpa.csv')
## Run repeated measure ANOVA
pctpa_F = summary(aov(AUC ~ Onset + Error(subj/(Onset)) , data = pctpa))
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv')
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/pctpa.csv')
## Run repeated measure ANOVA
pctpa_F = summary(aov(AUC ~ Onset + Error(subj/(Onset)) , data = pctpa))
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
pctpa_ontime = pctpa %>%
filter(Onset == 'Ontime')
pctpa_late = pctpa %>%
filter(Onset == 'Late')
p1 = t.test(pctpa_early$AUC,pctpa_ontime$AUC, paired = TRUE)
p2 = t.test(pctpa_early$AUC,pctpa_late$AUC, paired = TRUE) #*
p3 = t.test(pctpa_ontime$AUC,pctpa_late$AUC, paired = TRUE)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3)
pctpa_F
##### Lower bound ####
lowerbound = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/lowerbound.csv')
## Run repeated measure ANOVA
lowerbound_F = summary(lowerbound(Lowerbound ~ Onset + Error(subj/(Onset)) , data = lowerbound))
## Run repeated measure ANOVA
lowerbound_F = summary(aov(Lowerbound ~ Onset + Error(subj/(Onset)) , data = lowerbound))
lowerbound_F
## ttest in comparison onset (early, ontime, late)
lowerbound_early = lowerbound %>%
filter(Onset == 'Early')
lowerbound_ontime = lowerbound %>%
filter(Onset == 'Ontime')
lowerbound_late = lowerbound %>%
filter(Onset == 'Late')
p1 = t.test(lowerbound_early$Lowerbound,lowerbound_ontime$Lowerbound, paired = TRUE)
p2 = t.test(lowerbound_early$Lowerbound,lowerbound_late$Lowerbound, paired = TRUE) #*
p3 = t.test(lowerbound_ontime$Lowerbound,lowerbound_late$Lowerbound, paired = TRUE)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3)
##### Upper bound ####
upperbound = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/upperbound.csv')
## Run repeated measure ANOVA
upperbound_F = summary(aov(Upperbound ~ Onset + Error(subj/(Onset)) , data = upperbound))
upperbound_F
##### Reflection point ####
inflectionpoint = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/inflectionpoint.csv')
## Run repeated measure ANOVA
inflectionpoint_F = summary(aov(EC50 ~ Onset + Error(subj/(Onset)) , data = inflectionpoint))
inflectionpoint_F
##### Slope of the reflection point ####
Slope = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/slope.csv')
## Run repeated measure ANOVA
Slope_F = summary(aov(Slope ~ Onset + Error(subj/(Onset)) , data = Slope))
Slope_F
pctpa_F
p1 = t.test(pctpa_early$AUC,pctpa_ontime$AUC, paired = TRUE)
p2 = t.test(pctpa_early$AUC,pctpa_late$AUC, paired = TRUE) #*
p3 = t.test(pctpa_ontime$AUC,pctpa_late$AUC, paired = TRUE)
p1
p2
pctpa_F
?p.adjust
p.adjust(p2[["p.value"]], method = "fdr", n = 3)
setwd('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv')
##### AUC of/pa/ response ####
pctpa = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/pctpa.csv')
## Run repeated measure ANOVA
pctpa_F = summary(aov(AUC ~ Onset + Error(subj/(Onset)) , data = pctpa))
pctpa_F
## ttest in comparison onset (early, ontime, late)
pctpa_early = pctpa %>%
filter(Onset == 'Early')
pctpa_ontime = pctpa %>%
filter(Onset == 'Ontime')
pctpa_late = pctpa %>%
filter(Onset == 'Late')
p1 = t.test(pctpa_early$AUC,pctpa_ontime$AUC, paired = TRUE)
p2 = t.test(pctpa_early$AUC,pctpa_late$AUC, paired = TRUE) #*
p3 = t.test(pctpa_ontime$AUC,pctpa_late$AUC, paired = TRUE)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3)
p2
##### Lower bound ####
lowerbound = read.csv('/Users/tzu-hancheng/Google_Drive/Research/entrainedVOT/pilot2018/results/outlierexclud_csv/lowerbound.csv')
## Run repeated measure ANOVA
lowerbound_F = summary(aov(Lowerbound ~ Onset + Error(subj/(Onset)) , data = lowerbound))
lowerbound_F
## ttest in comparison onset (early, ontime, late)
lowerbound_early = lowerbound %>%
filter(Onset == 'Early')
lowerbound_ontime = lowerbound %>%
filter(Onset == 'Ontime')
lowerbound_late = lowerbound %>%
filter(Onset == 'Late')
p1 = t.test(lowerbound_early$Lowerbound,lowerbound_ontime$Lowerbound, paired = TRUE)
p2 = t.test(lowerbound_early$Lowerbound,lowerbound_late$Lowerbound, paired = TRUE) #*
p3 = t.test(lowerbound_ontime$Lowerbound,lowerbound_late$Lowerbound, paired = TRUE)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3)
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3)
p1
p3
p1
p2
