## Load the data
mydataEXP4 = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n59.csv") # exp4c
View(mydataEXP4)
##### Accuracy ####
Accdata = read.csv('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp1/data_analysis/Rdata/Accuracy.csv')
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
library(tidyr)
library(dplyr)
setwd('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp1/data_analysis/Rdata')
##### Accuracy ####
Accdata = read.csv('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp1/data_analysis/Rdata/Accuracy.csv')
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
seperate?
?separate
library(lme4)
library(lmerTest)
library(tidyverse)
library(broom)
library(ggplot2)
library(ggpubr)
library('fastDummies')
library(effsize)
library(lsr)
## Load the data
EXPtone = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8b_clean_n84.csv")
EXPspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8a_clean_n80.csv")
EXPtoneasspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/old/EXP8c_clean_n88.csv")
alldata=rbind(select(EXPtone,participant_id,sub_id,exp,Onset,Length,Shorter),select(EXPspeech,participant_id,sub_id,exp,Onset,Length,Shorter),
select(EXPtoneasspeech,participant_id,sub_id,exp,Onset,Length,Shorter))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,rLength,sub_id) %>% summarise(Shorter=mean(Shorter))
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(sub_id,fOnsetR,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(sub_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## flag outliers based on slope
# who have reverse slopes, flat lines
# 'af90a' press the same button across all experiment
aovmeans$outliers_slope = ifelse(aovmeans$slope>= 0 | aovmeans$sub_id == 'af90a',1,0)
outliers_slope_subj = filter(aovmeans,outliers_slope==1)
aovmeans_clean1 = filter(aovmeans, !(sub_id %in% unique(outliers_slope_subj$sub_id)))
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
q3 = quantile(aovmeans_clean1$fifty,.75)
iqr = IQR(aovmeans_clean1$fifty)
aovmeans_clean1$outliers = ifelse(aovmeans_clean1$fifty < (q1 - 1.5*iqr) | aovmeans_clean1$fifty > (q3 + 1.5*iqr),"outliers","clean")
outliers_subj_50 = filter(aovmeans_clean1,outliers=="outliers")
aovmeans_clean2 = filter(aovmeans_clean1, !(sub_id %in% unique(outliers_subj_50$sub_id)))
hist(aovmeans_clean2$fifty,200)
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetR) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, sub_id %in% unique(aovmeans_clean2$sub_id))
aovdata_outlier_slope = filter(aovdata, sub_id %in% unique(outliers_slope_subj$sub_id))
aovdata_outlier_50 = filter(aovdata, sub_id %in% unique(outliers_subj_50$sub_id))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetR,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(sub_id))
aovdata_clean_plot$fOnsetR = factor(aovdata_clean_plot$fOnsetR, levels = c("early","ontime","late"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP8a","EXP8b","EXP8c"))
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)#+
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$Explabel == "EXP8a","Speech",ifelse(aovmeans_clean2$Explabel == "EXP8b","Tones","ToneasSpeech"))
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetR, levels = c("early","ontime","late"))
aovmeans_clean2$Explabel = factor(aovmeans_clean2$Explabel, levels = c("Speech","Tones","ToneasSpeech"))
## size
exp8a = filter(aovmeans_clean2,Explabel == "Speech")
exp8b = filter(aovmeans_clean2,Explabel == "Tones")
exp8c = filter(aovmeans_clean2,Explabel == "ToneasSpeech")
length(unique(exp8a$sub_id))
length(unique(exp8b$sub_id))
length(unique(exp8c$sub_id))
m = summary(aov(Shorter~fOnsetR*Explabel+Error(sub_id/fOnsetR),data=filter(aovmeans_clean2,Explabel!="Tones")))
m
# calculate partial generalized eta sq https://www.aggieerin.com/shiny-server/tests/gesmixss.html
m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[1]/(m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[1]+m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[3]+m$'Error: sub_id'[[1]]$`Sum Sq`[2]) # Onset
m$'Error: sub_id'[[1]]$`Sum Sq`[1]/(m$'Error: sub_id'[[1]]$`Sum Sq`[1]+m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[3]+m$'Error: sub_id'[[1]]$`Sum Sq`[2]) # Target
m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[2]/(m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[2]+m$'Error: sub_id:fOnsetR'[[1]]$`Sum Sq`[3]+m$'Error: sub_id'[[1]]$`Sum Sq`[2]) # Onset*Target
View(EXPtoneasspeech)
View(aovdata_clean_plot)
aovdata_clean_plot$SD[1]/aovdata_clean_plot$Nsubs
aovdata_clean_plot$SD[1]/aovdata_clean_plot$Nsubs[1]
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
facet_grid(Explabel~.)
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
#facet_grid(Explabel~.)
ggplot(aovdata_clean_plot,aes(x=Length,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
View(aovdata_clean)
View(aovdata)
View(alldata)
library(lme4)
library(lmerTest)
library(tidyverse)
library(broom)
library(ggplot2)
library(ggpubr)
library('fastDummies')
library(effsize)
library(lsr)
## Load the data
EXPtone = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8b_clean_n84.csv")
EXPspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8a_clean_n80.csv")
EXPtoneasspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/old/EXP8c_clean_n88.csv")
alldata=rbind(select(EXPtone,participant_id,sub_id,exp,Onset,Length,Shorter),select(EXPspeech,participant_id,sub_id,exp,Onset,Length,Shorter),
select(EXPtoneasspeech,participant_id,sub_id,exp,Onset,Length,Shorter))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,rLength,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(sub_id,fOnsetR,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(sub_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## flag outliers based on slope
# who have reverse slopes, flat lines
# 'af90a' press the same button across all experiment
aovmeans$outliers_slope = ifelse(aovmeans$slope>= 0 | aovmeans$sub_id == 'af90a',1,0)
outliers_slope_subj = filter(aovmeans,outliers_slope==1)
aovmeans_clean1 = filter(aovmeans, !(sub_id %in% unique(outliers_slope_subj$sub_id)))
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
q3 = quantile(aovmeans_clean1$fifty,.75)
iqr = IQR(aovmeans_clean1$fifty)
aovmeans_clean1$outliers = ifelse(aovmeans_clean1$fifty < (q1 - 1.5*iqr) | aovmeans_clean1$fifty > (q3 + 1.5*iqr),"outliers","clean")
outliers_subj_50 = filter(aovmeans_clean1,outliers=="outliers")
aovmeans_clean2 = filter(aovmeans_clean1, !(sub_id %in% unique(outliers_subj_50$sub_id)))
hist(aovmeans_clean2$fifty,200)
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetR) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, sub_id %in% unique(aovmeans_clean2$sub_id))
aovdata_outlier_slope = filter(aovdata, sub_id %in% unique(outliers_slope_subj$sub_id))
aovdata_outlier_50 = filter(aovdata, sub_id %in% unique(outliers_subj_50$sub_id))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetR,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(sub_id))
aovdata_clean_plot$fOnsetR = factor(aovdata_clean_plot$fOnsetR, levels = c("early","ontime","late"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP8a","EXP8b","EXP8c"))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,Length,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
## Load the data
EXPtone = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8b_clean_n84.csv")
EXPspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/EXP8a_clean_n80.csv")
EXPtoneasspeech = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/exp8/results/old/EXP8c_clean_n88.csv")
alldata=rbind(select(EXPtone,participant_id,sub_id,exp,Onset,Length,Shorter),select(EXPspeech,participant_id,sub_id,exp,Onset,Length,Shorter),
select(EXPtoneasspeech,participant_id,sub_id,exp,Onset,Length,Shorter))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,Length,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ Length,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(sub_id,fOnsetR,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(sub_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## flag outliers based on slope
# who have reverse slopes, flat lines
# 'af90a' press the same button across all experiment
aovmeans$outliers_slope = ifelse(aovmeans$slope>= 0 | aovmeans$sub_id == 'af90a',1,0)
outliers_slope_subj = filter(aovmeans,outliers_slope==1)
aovmeans_clean1 = filter(aovmeans, !(sub_id %in% unique(outliers_slope_subj$sub_id)))
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
q3 = quantile(aovmeans_clean1$fifty,.75)
iqr = IQR(aovmeans_clean1$fifty)
aovmeans_clean1$outliers = ifelse(aovmeans_clean1$fifty < (q1 - 1.5*iqr) | aovmeans_clean1$fifty > (q3 + 1.5*iqr),"outliers","clean")
outliers_subj_50 = filter(aovmeans_clean1,outliers=="outliers")
aovmeans_clean2 = filter(aovmeans_clean1, !(sub_id %in% unique(outliers_subj_50$sub_id)))
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetR) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, sub_id %in% unique(aovmeans_clean2$sub_id))
aovdata_outlier_slope = filter(aovdata, sub_id %in% unique(outliers_slope_subj$sub_id))
aovdata_outlier_50 = filter(aovdata, sub_id %in% unique(outliers_subj_50$sub_id))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetR,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(sub_id))
aovdata_clean_plot = aovdata_clean %>% group_by(Length,fOnsetR,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(sub_id))
aovdata_clean_plot$fOnsetR = factor(aovdata_clean_plot$fOnsetR, levels = c("early","ontime","late"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP8a","EXP8b","EXP8c"))
ggplot(aovdata_clean_plot,aes(x=Length,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
ggplot(aovdata_clean_plot,aes(x=Length,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
scale_color_manual(values=c("red","blue","gray"))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$Explabel == "EXP8a","Speech",ifelse(aovmeans_clean2$Explabel == "EXP8b","Tones","ToneasSpeech"))
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetR, levels = c("early","ontime","late"))
aovmeans_clean2$Explabel = factor(aovmeans_clean2$Explabel, levels = c("Speech","Tones","ToneasSpeech"))
ggplot(aovmeans_clean2, aes(x = Explabel, y = fifty, fill = fOnsetR)) +
geom_boxplot(outlier.size = 0) +
geom_point(position = position_jitterdodge(jitter.width = 0.1)) +
labs(x = "Onset")
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
ggplot(aovdata_clean_plot,aes(x=Length,y=mShorter,color=fOnsetR,linetype=Explabel,group=interaction(fOnsetR,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)
