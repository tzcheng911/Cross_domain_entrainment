ymax = 1.2
png("SSEP_beat_mIC.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigy))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="**",size=8)
dev.off()
## Meter frequency 1.2 aIC: 3 lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/bimeterfreq_aIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
ymin = 0
ymax = .6
png("SSEP_bimeter_aIC.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .575,xend=2.25,yend=.575))+
annotate(geom="text", x= 0.5*(1.75 + 2.25), y=.575, label="*",size=8) +
geom_segment(aes(x=2.75,y= .375,xend=3.25,yend=.375))+
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=.375, label="*",size=8) +
geom_segment(aes(x=3.75,y= .575,xend=4.25,yend=.575))+
annotate(geom="text", x= 0.5*(3.75 + 4.25), y=.575, label="**",size=8)
dev.off()
## Meter frequency 1.2 mIC: 3 lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/bimeterfreq_mIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
ymin = 0
ymax = .6
png("SSEP_bimeter_mIC.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=.75,y= .25,xend=1.25,yend=.25))+
annotate(geom="text", x= 0.5*(.75 + 1.25), y=.25, label="*",size=8) +
geom_segment(aes(x=1.75,y= .35,xend=2.25,yend=.35))+
annotate(geom="text", x= 0.5*(1.75 + 2.25), y=.35, label="**",size=8) +
geom_segment(aes(x=2.75,y= .25,xend=3.25,yend=.25),colour = 'gray')+
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=.25, label="*",size=8,colour = 'gray')
dev.off()
## Meter frequency 0.8 aIC: no Line ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/termeterfreq_aIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
sigx = 3.75
sigxend = 4.25
sigy = 0.425
sigyend = sigy
ymin = 0
ymax = .6
png("SSEP_termeter_aIC.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigyend),colour = 'gray')+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="*",size=8,colour = 'gray')
dev.off()
## Meter frequency 0.8 mIC: 3 lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/termeterfreq_mIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
ymin = 0
ymax = .6
png("SSEP_termeter_mIC.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .25,xend=2.25,yend=.25))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(1.75 + 2.25), y=.25, label="*",size=8) +
geom_segment(aes(x=2.75,y= .25,xend=3.25,yend=.25))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=.25, label="**",size=8) +
geom_segment(aes(x=3.75,y= .25,xend=4.25,yend=.25))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(3.75 + 4.25), y=.25, label="***",size=8)
dev.off()
## auditory-sound PLV: 1 line ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/astimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
sigx = 1
sigxend = 2
sigy = .475
sigyend = sigy
ymin = .3
ymax = .6
png("astimePLV.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "PLV") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigy))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="*",size=8)
dev.off()
## motor-sound PLV: 3 lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/mstimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
ymin = .3
ymax = .6
png("mstimePLV.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1,y= .52,xend=4,yend=.52))+
annotate(geom="text", x= 0.5*(1 + 4), y=.52, label="**",size=8) +
geom_segment(aes(x=2,y= .56,xend=4,yend=.56))+
annotate(geom="text", x= 0.5*(2 + 4), y=.56, label="**",size=8) +
geom_segment(aes(x=3,y= .6,xend=4,yend=.6))+
annotate(geom="text", x= 0.5*(3 + 4), y=.6, label="*",size=8)
dev.off()
## auditory-motor PLV: 1 line ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/amtimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
sigx = 1
sigxend = 4
sigy = .4
sigyend = sigy
ymin = .3
ymax = .6
png("amtimePLV.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigy))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="**",size=8)
dev.off()
## delta band: 5 Lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/direction_phase_2-3Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
ymin = 0
ymax = 0.0035
png("SIFT_delta.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory")) +
geom_segment(aes(x=1,y= 0.0028,xend=2,yend=0.0028))+ # BL vs PB
annotate(geom="text", x= 0.5*(1 + 2), y=0.0028, label="*",size=8)+
geom_segment(aes(x=1,y= 0.0031,xend=3,yend=0.0031))+ # BL vs IB
annotate(geom="text", x= 0.5*(1 + 3), y=0.0031, label="*",size=8)+
geom_segment(aes(x=1,y= 0.0034,xend=4,yend=0.0034))+ # BL vs TAP
annotate(geom="text", x= 0.5*(1 + 4), y=0.0034, label="*",size=8)+
geom_segment(aes(x=1.75,y= 0.0023,xend=2.25,yend=0.0023))+ # am vs ma in PB
annotate(geom="text", x= 0.5*(1.75 + 2.25), y=0.0023, label="*",size=8)+
geom_segment(aes(x=2.75,y= 0.0025,xend=3.25,yend=0.0025))+ # am vs ma in IB
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=0.0025, label="*",size=8)
dev.off()
## delta band: 2 Lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/direction_phase_2-3Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
ymin = 0
ymax = 0.0035
png("SIFT_delta.png", units="in", width=6, height=4, res=300) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory")) +
geom_segment(aes(x=1,y= 0.0028,xend=2,yend=0.0028))+ # BL vs PB
annotate(geom="text", x= 0.5*(1 + 2), y=0.0028, label="*",size=8)+
geom_segment(aes(x=2.75,y= 0.0025,xend=3.25,yend=0.0025),colour = 'gray')+ # am vs ma in IB
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=0.0025, label="*",size=8,colour = 'gray')
dev.off()
## alpha band: 0 Lines ##
Data = read.csv('/Volumes/TOSHIBA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/direction_phase_8-12Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PB','IB','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
png("SIFT_alpha.png", units="in", width=6, height=4, res=300)
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory"))
dev.off()
library(lme4)
library(lmerTest)
library(tidyverse)
library(broom)
library('fastDummies')
#mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp3_20CR11/results/20CR11_clean_n34.csv")
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata/exp2_PPS_n48.csv") # exp2
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
# mydata = mydata %>%
#  mutate(Onset =case_when(Onset == 5 ~ "Early", Onset == 8 ~ "Ontime", Onset == 9 ~ "Late"))
mydata = mydata %>%
mutate(nresponse_value =case_when(response_value == "Longer" ~ 0, response_value == "Shorter" ~1))
View(mydata)
## Rescale and re-reference
mydata = mydata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE))
mydata = mydata %>%
mutate(fOnset = as.factor(Onset))
mydata$fOnsetR = relevel(mydata$fOnset, ref="8")
## glm model with onset coded as Early, ontime, late run for each experiment
eelm = glmer(nresponse_value ~ fOnsetR + rLength + fOnsetR:rLength + (1 + fOnsetR + rLength + fOnsetR:rLength|participant_id),data= mydata,family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
summary(lm1)
ranef(lm)
eta_sq(eelm,partial = TRUE)
eelm
View(mydata)
library(tidyr)
library(dplyr)
setwd('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata')
##### Accuracy ####
Accdata = read.csv('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata/Accuracy.csv')
View(Accdata)
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
separate_Accdata <- separate(long_Accdata, BD, c("Comparison_onsets", "Delay_length"))
View(separate_Accdata)
48*3*6
48*3
48*6
48*9
View(long_Accdata)
View(Accdata)
View(Accdata)
View(separate_Accdata)
View(Accdata)
View(separate_Accdata)
## Reshape my data
library(effsize)
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp4_20CR12/results_shortlongdelay_2021/v2_20CR12_clean_n67_cleaned.csv")
216*2*3*6*67
View(mydata)
67*216
67*216*2
a = mydata %>%
group_by(sub_id)
View(a)
summarize(a)
a = mydata %>%
group_by(sub_id) %>%
summarise_at(Correct)
all_conds_mean_acc <- mydata %>%
group_by(onset) %>%
summarise(mean(Correct))
View(all_conds_mean_acc)
all_conds_mean_acc <- mydata %>%
group_by(onset,delay) %>%
summarise(mean(Correct))
all_conds_mean_acc <- mydata %>%
group_by(onset,delay) %>%
summarise(mean(Correct),variable_name=condition)
all_conds_mean_acc <- mydata %>%
group_by(onset,delay) %>%
summarise(mean(Correct),variable_name='condition')
all_conds_mean_acc$`mean(Correct)`
Accuracy_result = summary(aov(mean(Correct) ~ onset * delay, data = my_data))
Accuracy_result = summary(aov(mean(Correct) ~ onset * delay, data = all_conds_mean_acc))
typeof(all_conds_mean_acc)
typeof(mydata)
all_conds_mean_acc
Accuracy_result = summary(aov('mean(Correct)' ~ onset * delay, data = all_conds_mean_acc))
Accuracy_result = summary(aov(`mean(Correct)` ~ onset * delay, data = all_conds_mean_acc))
View(Accuracy_result)
Accuracy_result
all_conds_mean_acc <- mydata %>%
group_by(sub_id,onset,delay,comparison,group,key) %>%
summarise(mean(Correct))
all_conds_mean_acc <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(mean(Correct))
Accuracy_result
View(all_conds_mean_acc)
all_conds_mean_acc$sub_id = as.factor(all_conds_mean_acc$sub_id)
all_conds_mean_acc$sub_id = as.factor(all_conds_mean_acc$sub_id)
all_conds_mean_acc$onset = as.factor(all_conds_mean_acc$onset)
all_conds_mean_acc$delay = as.factor(all_conds_mean_acc$delay)
all_conds_mean_acc$comparison = as.factor(all_conds_mean_acc$comparison)
all_conds_mean_acc$order = as.factor(all_conds_mean_acc$order)
all_conds_mean_acc$key = as.factor(all_conds_mean_acc$key)
Accuracy_result = summary(aov(`mean(Correct)` ~ onset * delay * comparison * order * key + Error(sub_id/onset * delay * comparison), data = all_conds_mean_acc))
Accuracy_result
all_conds_mean_acc <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(mean(Shorter))
all_conds_mean_acc$sub_id = as.factor(all_conds_mean_acc$sub_id)
all_conds_mean_acc$onset = as.factor(all_conds_mean_acc$onset)
all_conds_mean_acc$delay = as.factor(all_conds_mean_acc$delay)
all_conds_mean_acc$comparison = as.factor(all_conds_mean_acc$comparison)
all_conds_mean_acc$order = as.factor(all_conds_mean_acc$order)
all_conds_mean_acc$key = as.factor(all_conds_mean_acc$key)
Accuracy_result = summary(aov(`mean(Shorter)` ~ onset * delay * comparison * order * key + Error(sub_id/onset * delay * comparison), data = all_conds_mean_acc))
Accuracy_result
## Reshape my data
library(effsize)
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp4_20CR12/results_shortlongdelay_2021/v2_20CR12_clean_n67_cleaned.csv")
## Accuracy
all_conds_mean_acc <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(mean(Correct))
all_conds_mean_acc$sub_id = as.factor(all_conds_mean_acc$sub_id)
all_conds_mean_acc$onset = as.factor(all_conds_mean_acc$onset)
all_conds_mean_acc$delay = as.factor(all_conds_mean_acc$delay)
all_conds_mean_acc$comparison = scale(all_conds_mean_acc$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_acc$order = as.factor(all_conds_mean_acc$order)
all_conds_mean_acc$key = as.factor(all_conds_mean_acc$key)
Accuracy_result = summary(aov(`mean(Correct)` ~ onset * delay * comparison * order * key + Error(sub_id/onset * delay * comparison), data = all_conds_mean_acc))
Accuracy_result
## Proportion short
all_conds_mean_acc <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(mean(Shorter))
all_conds_mean_acc$sub_id = as.factor(all_conds_mean_acc$sub_id)
all_conds_mean_acc$onset = as.factor(all_conds_mean_acc$onset)
all_conds_mean_acc$delay = as.factor(all_conds_mean_acc$delay)
all_conds_mean_acc$comparison = scale(all_conds_mean_acc$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_acc$order = as.factor(all_conds_mean_acc$order)
all_conds_mean_acc$key = as.factor(all_conds_mean_acc$key)
Propotionshort_result = summary(aov(`mean(Shorter)` ~ onset * delay * comparison * order * key + Error(sub_id/onset * delay * comparison), data = all_conds_mean_acc))
Propotionshort_result
## Reshape my data
library(effsize)
library(tidyr)
library(dplyr)
setwd('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata')
##### Accuracy ####
Accdata = read.csv('/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata/Accuracy.csv')
long_Accdata <- gather(Accdata,BD,Accuracy,Early.Shortdelay:Late.Longdelay)
separate_Accdata <- separate(long_Accdata, BD, c("Comparison_onsets", "Delay_length"))
View(separate_Accdata)
View(Accdata)
