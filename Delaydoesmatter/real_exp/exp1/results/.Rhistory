install.packages("E1071")
install.packages("e1071")
install.packages("ISLR")
install.packages("tidyverse")
probs = seq(0,1,.001)
df_probs = data.frame(probability = probs,)
View(Default)
library(tidyverse)
library(e1071)
library(ISLR)
library(ggplot)
library(ggplot2)
View(Default)
Default = Default %>%
mutate(
default_numeric = case_when(
default == "Yes" ~ 1,
default == "No" ~ 0
)
)
View(Default)
Default %>%
ggplot(aes(x = balance,y=default_numeric))+geom_point(alpha = .4) + geom_smooth(method = "lm") + theme_minimal()
ggplot(aes(x = balance,y=default_numeric))+geom_point(alpha = .8) + geom_smooth(method = "lm") + theme_minimal()
Default %>% ggplot(aes(x = balance,y=default_numeric))+geom_point(alpha = .8) + geom_smooth(method = "lm") + theme_minimal()
Default %>% ggplot(aes(x = balance,y=default_numeric))+ geom_smooth(method = "lm") + theme_minimal()
Default %>% ggplot(aes(x = balance,y=default_numeric))+geom_point(alpha = .8)  + theme_minimal()
install.packages(lme4
)
install.packages('lme4')
install.packages('lme4')
install.packages('lmerTest')
install.packages('broom')
library(broom)
library(lme4)
library(lmerTest)
library(tidyverse)
#Set working directory (where the data file is)
setwd("/Users/tzu-hancheng/Google_Drive/Research/Papers/Time_perception/results")
#Set working directory (where the data file is)
setwd("/Users/t.z.cheng/Google Drive/Research/Delaydoesmatter/real_exp/exp1/results")
#Import data
# mydata = read.csv('learning_effect.csv')
mydata = read.csv('new_learning_effect.csv')
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
# filter the first block
mydata = mydata %>%
filter((Delay_length == 2 & Present_order == 1) | (Delay_length == 4 & Present_order == 2))
# Center and scaling each variable
mydata$Trial_num = scale(mydata$Trial_num, center = TRUE, scale = TRUE)
mydata$Delay_length = scale(mydata$Delay_length, center = TRUE, scale = TRUE)
mydata$Comp_onset = scale(mydata$Comp_onset, center = TRUE, scale = TRUE)
mydata$Comp_length = scale(mydata$Comp_length, center = TRUE, scale = TRUE)
mydata$Present_order = scale(mydata$Present_order, center = TRUE, scale = TRUE)
numIters = 10000
# Examine the main effect of Trial_num
lm_withtrial = glmer(Correctness~Delay_length + Trial_num + (Trial_num|Subj_num),data= mydata,family="binomial", REML=FALSE, control=glmerControl(optCtrl=list(maxfun=numIters)), verbose=2)
lm_withouttrial = glmer(Correctness~Delay_length + (Trial_num|Subj_num),data= mydata,family="binomial", REML=FALSE, control=glmerControl(optCtrl=list(maxfun=numIters)), verbose=2)
anova(lm_withtrial,lm_withouttrial)
# Examine the interaciton between Delay_length and Trial_num
lm_withtrial = glmer(Correctness~Delay_length + Delay_length:Trial_num + (Trial_num|Subj_num),data= mydata,family="binomial", REML=FALSE, control=glmerControl(optCtrl=list(maxfun=numIters)), verbose=2)
lm_withouttrial = glmer(Correctness~Delay_length + (Trial_num|Subj_num),data= mydata,family="binomial", REML=FALSE, control=glmerControl(optCtrl=list(maxfun=numIters)), verbose=2)
anova(lm_withtrial,lm_withouttrial)
