lmall_speech = glmer(Shorter ~ fOnsetE*rLength  + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP8a"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
# submodels
lmall_speech = glmer(Shorter ~ fOnsetE*rLength  + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP9a"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
lmall_tone = glmer(Shorter ~ fOnsetE*rLength  + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP9b"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
lmall_speech_noOnset = glmer(Shorter ~ fOnsetE*rLength - fOnsetE  + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP9a"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
lmall_tone_noOnset = glmer(Shorter ~ fOnsetE*rLength - fOnsetE + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP9b"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
anova(lmall_tone,lmall_tone_noOnset)
summary(lmall_tone) # Use early as the reference
anova(lmall_speech,lmall_speech_noOnset)
summary(lmall_speech) # Use early as the reference
save.image("~/Documents/GitHub/Cross_domain_entrainment/exp9ab/results/EXP9_mixed_effect_models.RData")
load("~/Documents/GitHub/Cross_domain_entrainment/exp9ab/results/EXP9_mixed_effect_models.RData")
View(lmall_tone_noOnset)
anova(lmall_tone,lmall_tone_noOnset)
anova(lmall_speech,lmall_speech_noOnset)
## Load the data
EXPnaturetone = read.csv("/Users/t.z.cheng/Google_Drive/Research/cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results/EXP4a_clean_n53.csv")
setwd("~/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020")
## Load the data
EXPnaturetone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAMtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
## Load the data
EXPnaturetone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAMtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
## Load the data
EXPtone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
View(EXPtone)
alldata = EXPtone
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
library(lme4)
library(lmerTest)
library(tidyverse)
library(broom)
library(ggplot2)
library(ggpubr)
library('fastDummies')
library(effsize)
library(lsr)
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$Onset = ifelse(alldata$Onset==5,'early',ifelse(alldata$Onset==8,'ontime'),'late')
alldata$Onset = ifelse(alldata$Onset==5,'early',ifelse(alldata$Onset==8,'ontime','late'))
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,rLength,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
View(EXPAmtone)
View(EXPNattone)
alldata=select(EXPNattone,participant_id,sub_id,Onset,Length,Shorter,Correct)
alldata=select(EXPNattone,participant_id,participant_id,Onset,Length,Shorter,Correct)
EXPNattone = EXPNattone %>%
mutate(sub_id = participant_id[:5])
EXPNattone = EXPNattone %>%
mutate(sub_id = participant_id[0:5])
EXPNattone$participant_id[1]
EXPNattone$participant_id[1][]:5
EXPNattone$participant_id[1][:5]
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct==TRUE,1,0)
alldata=select(EXPNattone,participant_id,Onset,Length,Shorter,Correct)
alldata$Onset = ifelse(alldata$Onset==5,'early',ifelse(alldata$Onset==8,'ontime','late'))
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct==TRUE,1,0)
alldata=select(EXPNattone,participant_id,Onset,Length,Shorter,Correct)
alldata$Onset = ifelse(alldata$Onset==5,'early',ifelse(alldata$Onset==8,'ontime','late'))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,Explabel,OnsetNum,rLength,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,OnsetNum,rLength,sub_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetR,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetR) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(participant_id,fOnsetR,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(participant_id),SE=ShorterSD/sqrt(Nsubs))
# mutate columes of pps
pps = aovdata %>% group_by(participant_id,fOnsetR) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(participant_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## flag outliers based on slope
# who have reverse slopes, flat lines
# 'af90a' press the same button across all experiment
aovmeans$outliers_slope = ifelse(aovmeans$slope>= 0 | aovmeans$participant_id == 'af90a',1,0)
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
aovmeans_clean1 = filter(aovmeans, !(participant_id %in% unique(outliers_slope_subj$participant_id)))
outliers_slope_subj = filter(aovmeans,outliers_slope==1)
aovmeans_clean1 = filter(aovmeans, !(participant_id %in% unique(outliers_slope_subj$participant_id)))
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
q3 = quantile(aovmeans_clean1$fifty,.75)
iqr = IQR(aovmeans_clean1$fifty)
aovmeans_clean1$outliers_50 = ifelse(aovmeans_clean1$fifty < (q1 - 1.5*iqr) | aovmeans_clean1$fifty > (q3 + 1.5*iqr),1,0)
outliers_subj_50 = filter(aovmeans_clean1,outliers_50==1)
aovmeans_clean2 = filter(aovmeans_clean1, !(participant_id %in% unique(outliers_subj_50$participant_id)))
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetR) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# Descriptive stats
aovmeans_clean2 %>%
group_by(fOnsetR) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, sub_id %in% unique(aovmeans_clean2$sub_id))
aovdata_clean$fOnsetR = factor(aovdata_clean$fOnsetR, levels = c("early","ontime","late"))
# plot overall results
aovdata_clean = filter(aovdata, participant_id %in% unique(aovmeans_clean2$sub_id))
# plot overall results
aovdata_clean = filter(aovdata, participant_id %in% unique(aovmeans_clean2$participant_id))
aovdata_clean$fOnsetR = factor(aovdata_clean$fOnsetR, levels = c("early","ontime","late"))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetR) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(sub_id))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetR) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(participant_id))
aovdata_clean_plot$fOnsetR = factor(aovdata_clean_plot$fOnsetR, levels = c("early","ontime","late"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP4c","EXP6"))
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetR,group=interaction(fOnsetR)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)+
theme_minimal()
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct==TRUE,1,0)
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
alldata$Onset = ifelse(alldata$Onset==5,'early',ifelse(alldata$Onset==8,'ontime','late'))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct==TRUE,1,0)
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(alldata$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(EXPNattone$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
EXPNattone$Correct=ifelse(EXPNattone$response_correct=='True',1,0)
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(EXPNattone$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetR) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct=='True',1,0)
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(EXPNattone$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(sub_id,fOnsetE,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(sub_id,fOnsetE,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(sub_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct=='True',1,0)
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(EXPNattone$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetR,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetE,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetE,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetE,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
## Load the data
EXPNattone = read.csv("/Users/t.z.cheng/Documents/GitHub/Cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4ab/results_shortdelay_2020/EXP4a_clean_n53.csv")
EXPAmtone = read.csv("/Users/t.z.cheng/Documents/GitHub//cross_domain_entrainment/Delaydoesmatter/real_exp/exp4_20CR12/4c/results/EXP4c_clean_n71.csv")
EXPNattone$Shorter=ifelse(EXPNattone$response_value=="Shorter",1,0)
EXPNattone$Correct=ifelse(EXPNattone$response_correct=='True',1,0)
EXPNattone$Onset = ifelse(EXPNattone$Onset==5,'early',ifelse(EXPNattone$Onset==8,'ontime','late'))
EXPNattone = EXPNattone %>%
mutate(exp = 'EXP4a') # scale the steps ## 4c: scale Length; 6: scale comparison
alldata=rbind(select(EXPNattone,participant_id,exp,Onset,Length,Shorter,Correct),select(EXPAmtone,participant_id,exp,Onset,Length,Shorter,Correct))
## Rescale and mutate new factors
alldata = alldata %>%
mutate(rLength = scale(Length, center = TRUE, scale = TRUE)) # scale the steps ## 4c: scale Length; 6: scale comparison
alldata = alldata %>%
mutate(fOnset = as.factor(Onset))
alldata = alldata %>%
mutate(Explabel = as.factor(exp))
## Onset coding and reference
alldata$fOnsetR = relevel(alldata$fOnset, ref="ontime") # make ontime condition the reference
alldata$fOnsetE = relevel(alldata$fOnset, ref="early") # make early condition the reference
alldata$OnsetNum=ifelse(alldata$fOnsetR=="early",-1,ifelse(alldata$fOnsetR=="ontime",0,1))
alldata$OnsetHelm1=ifelse(alldata$fOnsetR=="early",2/3,-1/3)
alldata$OnsetHelm2=ifelse(alldata$fOnsetR=="early",0,ifelse(alldata$fOnsetR=="ontime",1/2,-1/2))
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetE,OnsetNum,rLength,participant_id) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
## sort the data to be subjects x onset for each experiment
aovdata=alldata %>% #filter(comparison>=6) %>% ### if you limit speech to continua 1-5, no diffs. strong for 6-8
group_by(fOnsetE,OnsetNum,rLength,participant_id,Explabel) %>% summarise(Shorter=mean(Shorter)) # change rLength to Length for visualization
# run logistic fit on each subject and condition
aovmeans=aovdata %>%
group_by(participant_id,fOnsetE,Explabel) %>%
do(glmfit = glm(Shorter ~ rLength,data =.,family=binomial()))
# get the coefficients
aovmeans = aovmeans %>%
mutate(intercept = coef(glmfit)[1], slope = coef(glmfit)[2], fifty = -coef(glmfit)[1]/coef(glmfit)[2], deviance = glmfit$aic)
# mutate columes of pps
pps = aovdata %>% group_by(participant_id,fOnsetE,Explabel) %>% summarise(ShorterM=mean(Shorter),ShorterSD=sd(Shorter),Nsubs=n_distinct(participant_id),SE=ShorterSD/sqrt(Nsubs))
aovmeans = cbind(pps$ShorterM,aovmeans)
colnames(aovmeans)[1] = 'Shorter'
## flag outliers based on slope
# who have reverse slopes, flat lines
# 'af90a' press the same button across all experiment
aovmeans$outliers_slope = ifelse(aovmeans$slope>= 0 | aovmeans$participant_id == 'af90a',1,0)
outliers_slope_subj = filter(aovmeans,outliers_slope==1)
aovmeans_clean1 = filter(aovmeans, !(participant_id %in% unique(outliers_slope_subj$participant_id)))
# IQR criteria
q1 = quantile(aovmeans_clean1$fifty,.25)
q3 = quantile(aovmeans_clean1$fifty,.75)
iqr = IQR(aovmeans_clean1$fifty)
aovmeans_clean1$outliers_50 = ifelse(aovmeans_clean1$fifty < (q1 - 1.5*iqr) | aovmeans_clean1$fifty > (q3 + 1.5*iqr),1,0)
outliers_subj_50 = filter(aovmeans_clean1,outliers_50==1)
aovmeans_clean2 = filter(aovmeans_clean1, !(participant_id %in% unique(outliers_subj_50$participant_id)))
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetE) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, participant_id %in% unique(aovmeans_clean2$participant_id))
aovdata_outlier_slope = filter(aovdata, participant_id %in% unique(outliers_slope_subj$participant_id))
aovdata_outlier_50 = filter(aovdata, participant_id %in% unique(outliers_subj_50$participant_id))
aovdata_clean$fOnsetE = factor(aovdata_clean$fOnsetE, levels = c("early","ontime","late"))
aovdata_outlier_slope$fOnsetE = factor(aovdata_outlier_slope$fOnsetE, levels = c("early","ontime","late"))
aovdata_outlier_50$fOnsetE = factor(aovdata_outlier_50$fOnsetE, levels = c("early","ontime","late"))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetE,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(participant_id))
aovdata_clean_plot$fOnsetE = factor(aovdata_clean_plot$fOnsetE, levels = c("early","ontime","late"))
aovdata_clean$Explabel = factor(aovdata_clean$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_outlier_slope$Explabel = factor(aovdata_outlier_slope$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_outlier_50$Explabel = factor(aovdata_outlier_50$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP9a","EXP9b"))
ggplot(aovdata_clean_plot,aes(x=Length,y=mShorter,color=fOnsetE,linetype=Explabel,group=interaction(fOnsetE,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetE,linetype=Explabel,group=interaction(fOnsetE,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetE,linetype=Explabel,group=interaction(fOnsetE,Explabel)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$Explabel == "EXP4a","Nat Tone","Am Tone")
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetR, levels = c("early","ontime","late"))
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetE, levels = c("early","ontime","late"))
ggplot(aovmeans_clean2, aes(x = Explabel, y = Shorter, fill = fOnsetR)) +
geom_boxplot(outlier.size = 0) +
geom_point(position = position_jitterdodge(jitter.width = 0.1)) +
labs(x = "Onset")
## Final sample size
exp8a = filter(aovmeans_clean2,Explabel == "Nat Tone")
exp8b = filter(aovmeans_clean2,Explabel == "Am Tone")
length(unique(exp8a$participant_id))
length(unique(exp8b$participant_id))
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$Explabel == "EXP4a","Nat Tone (N = 36)","Am Tone (N = 58)")
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetE, levels = c("early","ontime","late"))
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$exp == "EXP4a","Nat Tone (N = 36)","Am Tone (N = 58)")
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetE, levels = c("early","ontime","late"))
View(aovmeans_clean2)
aovmeans_clean2 = filter(aovmeans_clean1, !(participant_id %in% unique(outliers_subj_50$participant_id)))
# Descriptive stats
aovmeans_clean2 %>%
group_by(Explabel,fOnsetE) %>%
summarize(mean(fifty),mean(intercept),mean(Shorter))
# plot overall results
aovdata_clean = filter(aovdata, participant_id %in% unique(aovmeans_clean2$participant_id))
aovdata_outlier_slope = filter(aovdata, participant_id %in% unique(outliers_slope_subj$participant_id))
aovdata_outlier_50 = filter(aovdata, participant_id %in% unique(outliers_subj_50$participant_id))
aovdata_clean$fOnsetE = factor(aovdata_clean$fOnsetE, levels = c("early","ontime","late"))
aovdata_outlier_slope$fOnsetE = factor(aovdata_outlier_slope$fOnsetE, levels = c("early","ontime","late"))
aovdata_outlier_50$fOnsetE = factor(aovdata_outlier_50$fOnsetE, levels = c("early","ontime","late"))
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetE,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(participant_id))
aovdata_clean_plot$fOnsetE = factor(aovdata_clean_plot$fOnsetE, levels = c("early","ontime","late"))
aovdata_clean$Explabel = factor(aovdata_clean$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_outlier_slope$Explabel = factor(aovdata_outlier_slope$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_outlier_50$Explabel = factor(aovdata_outlier_50$Explabel, levels = c("EXP9a","EXP9b"))
aovdata_clean_plot$Explabel = factor(aovdata_clean_plot$Explabel, levels = c("EXP9a","EXP9b"))
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$exp == "EXP4a","Nat Tone (N = 36)","Am Tone (N = 58)")
aovmeans_clean2$fOnsetR = factor(aovmeans_clean2$fOnsetE, levels = c("early","ontime","late"))
## relabel Speech to EXP8a and Tone to EXP8b and
aovmeans_clean2$Explabel = ifelse(aovmeans_clean2$Explabel == "EXP4a","Nat Tone (N = 36)","Am Tone (N = 58)")
ggplot(aovmeans_clean2, aes(x = Explabel, y = Shorter, fill = fOnsetR)) +
geom_boxplot(outlier.size = 0) +
geom_point(position = position_jitterdodge(jitter.width = 0.1)) +
labs(x = "Onset")
View(aovdata_clean)
View(aovdata_clean_plot)
View(aovdata_clean)
View(aovdata)
# plot overall results
aovdata_clean = filter(aovdata, participant_id %in% unique(aovmeans_clean2$participant_id))
View(aovdata_clean)
aovdata_clean_plot = aovdata_clean %>% group_by(rLength,fOnsetE,Explabel) %>% summarise(mShorter=mean(Shorter),SD=sd(Shorter),Nsubs=n_distinct(participant_id))
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetE,linetype=Explabel,group=interaction(fOnsetE,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)
View(EXPAmtone)
View(EXPNattone)
aovdata_clean_plot$Explabel = ifelse(aovdata_clean_plot$Explabel == "EXP4a","Nat Tone (N = 36)","Am Tone (N = 58)")
ggplot(aovdata_clean_plot,aes(x=rLength,y=mShorter,color=fOnsetE,linetype=Explabel,group=interaction(fOnsetE,Explabel)))+
geom_point()+
scale_x_continuous(breaks = seq(1, 8, by = 1))+
geom_line()+
geom_errorbar(aes(ymin=mShorter-SD/sqrt(Nsubs),ymax=mShorter+SD/sqrt(Nsubs)),width=0)+
facet_grid(Explabel~.)
## ANOVA on proportion short
m = summary(aov(Shorter~fOnsetR*Explabel+Error(participant_id/fOnsetR),data=aovmeans_clean2))
m
## ANOVA on proportion short
m = summary(aov(Shorter~fOnsetE*Explabel+Error(participant_id/fOnsetE),data=aovmeans_clean2))
m
View(aovmeans_clean2)
m = summary(aov(Shorter~fOnsetR+Error(participant_id/fOnsetR),data=filter(aovmeans_clean2,Explabel=="Nat Tone (N = 36)")))
m
m = summary(aov(Shorter~fOnsetR+Error(participant_id/fOnsetR),data=filter(aovmeans_clean2,Explabel=="AM Tone (N = 58)")))
m
m = summary(aov(Shorter~fOnsetR+Error(participant_id/fOnsetR),data=filter(aovmeans_clean2,Explabel=="AM Tone (N = 58)")))
data=filter(aovmeans_clean2,Explabel=="AM Tone (N = 58)"))
data=filter(aovmeans_clean2,Explabel=="AM Tone (N = 58)")
View(data)
m = summary(aov(Shorter~fOnsetR+Error(participant_id/fOnsetR),data=filter(aovmeans_clean2,Explabel=="Am Tone (N = 58)")))
m
## glmer on proportion short
alldata_clean = filter(alldata, participant_id %in% unique(aovmeans_clean2$participant_id))
# full
lmall = glmer(Shorter ~ Explabel*fOnsetE*rLength  + (1 + fOnsetE*rLength|participant_id),data= alldata_clean,family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
summary(lmall) # Use early as the reference
load("~/Documents/GitHub/Cross_domain_entrainment/exp8/results/EXP8_mixed_effect_models.RData")
anova(lmall,lmall_norLength)
anova(lmall,lmall_no2way)
anova(lmall,lmall_no3way)
summary(lmall) # Use early as the reference
anova(lmall_speech,lmall_speech_noOnset)
anova(lmall_tone,lmall_tone_noOnset)
# submodels
lmall_speech = glmer(Shorter ~ fOnsetE*rLength  + (1 + fOnsetE*rLength|sub_id),data= filter(alldata_clean,exp=="EXP9a"),family="binomial", control = glmerControl(optimizer="bobyqa"), verbose=2)
summary(lmall_speech) # Use early as the reference
summary(lmall_tone) # Use early as the reference
load("~/Documents/GitHub/Cross_domain_entrainment/exp9ab/results/EXP9_mixed_effect_models.RData")
anova(lmall,lmall_norLength)
anova(lmall,lmall_no2way)
anova(lmall,lmall_no3way)
summary(lmall) # Use early as the reference
anova(lmall_tone,lmall_tone_noOnset)
anova(lmall_speech,lmall_speech_noOnset)
summary(lmall_tone) # Use early as the reference
summary(lmall_speech) # Use early as the reference
