summarise(PPS = mean(PPS))
early = Proportiondata$`PPS`[Proportiondata$onset==5 & Proportiondata$delay==2]
early = Proportiondata$`PPS`[Proportiondata$onset==5]
ontime = Proportiondata$`PPS`[Proportiondata$onset==8]
late = Proportiondata$`PPS`[Proportiondata$onset==9]
#mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp2/data_analysis/Rdata/exp2_PPS_n48.csv") # exp2
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp3_20CR11/results/20CR11_clean_n34.csv") # exp3
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
## RM ANOVA on PPS
all_conds_mean_pps <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(PPS = mean(Shorter))
all_conds_mean_pps$sub_id = as.factor(all_conds_mean_pps$sub_id)
all_conds_mean_pps$onset = as.factor(all_conds_mean_pps$onset)
all_conds_mean_pps$delay = as.factor(all_conds_mean_pps$delay)
all_conds_mean_pps$comparison = scale(all_conds_mean_pps$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_pps$order = as.factor(all_conds_mean_pps$order)
all_conds_mean_pps$key = as.factor(all_conds_mean_pps$key)
# EXP3 and 5: only short delay
Propotionshort_result = summary(aov(PPS ~ onset + Error(sub_id/(onset)), data = all_conds_mean_pps))
Propotionshort_result
View(all_conds_mean_pps)
PPS <- all_conds_mean_pps %>%
group_by(onset) %>%
summarise(PPS = mean(PPS))
View(PPS)
PPS
Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`[1]/sum(Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`)
early_short = Proportiondata$`PPS`[Proportiondata$onset==5]
## Pairwise comparison for interaction effects
Proportiondata <- all_conds_mean_pps %>%
group_by(sub_id,onset) %>%
summarise(PPS = mean(PPS))
early_short = Proportiondata$`PPS`[Proportiondata$onset==5]
ontime_short = Proportiondata$`PPS`[Proportiondata$onset==8]
late_short = Proportiondata$`PPS`[Proportiondata$onset==9]
# Short condition
p1 = t.test(early_short,ontime_short, paired = TRUE) # Early vs Ontime in short condition
cohen.d(early_short,ontime_short)
p2 = t.test(early_short,late_short, paired = TRUE) # Early vs Late in short condition
cohen.d(early_short,late_short)
p3 = t.test(ontime_short,late_short, paired = TRUE) # Late vs Ontime in short condition
cohen.d(ontime_short,late_short)
p.adjust(p1[["p.value"]], method = "bonferroni", n = 3) # Early vs Ontime in short condition
p.adjust(p2[["p.value"]], method = "bonferroni", n = 3) # Early vs Late in short condition
p.adjust(p3[["p.value"]], method = "bonferroni", n = 3) # Late vs Ontime in short condition
p1
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp4_20CR12/results_shortdelay_2020/20CR12_clean_n53.csv") # exp4a
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
## RM ANOVA on PPS
all_conds_mean_pps <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(PPS = mean(Shorter))
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp4_20CR12/results_shortlongdelay_2021/v2_20CR12_clean_n67_cleaned.csv") # exp4b
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
## RM ANOVA on PPS
all_conds_mean_pps <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(PPS = mean(Shorter))
PPS <- all_conds_mean_pps %>%
group_by(onset) %>%
summarise(PPS = mean(PPS))
PPS
all_conds_mean_pps$sub_id = as.factor(all_conds_mean_pps$sub_id)
all_conds_mean_pps$onset = as.factor(all_conds_mean_pps$onset)
all_conds_mean_pps$delay = as.factor(all_conds_mean_pps$delay)
all_conds_mean_pps$comparison = scale(all_conds_mean_pps$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_pps$order = as.factor(all_conds_mean_pps$order)
all_conds_mean_pps$key = as.factor(all_conds_mean_pps$key)
# EXP4b: short and long delay
Propotionshort_result = summary(aov(PPS ~ onset * delay + Error(sub_id/(onset * delay)), data = all_conds_mean_pps))
Propotionshort_result
Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`[1]/sum(Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`)
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp5_21CR01/results/21CR01_clean_n24_e.csv") # exp5 empty
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
## RM ANOVA on PPS
all_conds_mean_pps <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(PPS = mean(Shorter))
PPS <- all_conds_mean_pps %>%
group_by(onset) %>%
summarise(PPS = mean(PPS))
PPS
all_conds_mean_pps$sub_id = as.factor(all_conds_mean_pps$sub_id)
all_conds_mean_pps$onset = as.factor(all_conds_mean_pps$onset)
all_conds_mean_pps$delay = as.factor(all_conds_mean_pps$delay)
all_conds_mean_pps$comparison = scale(all_conds_mean_pps$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_pps$order = as.factor(all_conds_mean_pps$order)
all_conds_mean_pps$key = as.factor(all_conds_mean_pps$key)
# EXP3 4a and 5: only short delay
Propotionshort_result = summary(aov(PPS ~ onset + Error(sub_id/(onset)), data = all_conds_mean_pps))
Propotionshort_result
Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`[1]/sum(Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`)
mydata = read.csv("/Users/t.z.cheng/Google_Drive/Research/Delaydoesmatter/real_exp/exp5_21CR01/results/21CR01_clean_n21_f.csv") # exp5 filled
str(mydata) #data inspection, you should see that all the variables are "int" they need to be centered and scaled
## RM ANOVA on PPS
all_conds_mean_pps <- mydata %>%
group_by(sub_id,onset,delay,comparison,order,key) %>%
summarise(PPS = mean(Shorter))
PPS <- all_conds_mean_pps %>%
group_by(onset) %>%
summarise(PPS = mean(PPS))
PPS
all_conds_mean_pps$sub_id = as.factor(all_conds_mean_pps$sub_id)
all_conds_mean_pps$onset = as.factor(all_conds_mean_pps$onset)
all_conds_mean_pps$delay = as.factor(all_conds_mean_pps$delay)
all_conds_mean_pps$comparison = scale(all_conds_mean_pps$comparison, center = TRUE, scale = TRUE) # mean centered
all_conds_mean_pps$order = as.factor(all_conds_mean_pps$order)
all_conds_mean_pps$key = as.factor(all_conds_mean_pps$key)
# EXP3 4a and 5: only short delay
Propotionshort_result = summary(aov(PPS ~ onset + Error(sub_id/(onset)), data = all_conds_mean_pps))
Propotionshort_result
Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`[1]/sum(Propotionshort_result$'Error: sub_id:onset'[[1]]$`Sum Sq`)
## Ampdiff aIC: 3 lines PM, IM, TAP ##
Data = read.csv('Volumes/TOSHIMA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_aIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
## Ampdiff aIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIMA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_aIC.csv')
## Ampdiff aIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_aIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
ymin = -.125
ymax = .125
pdf("SSEP_ampdiff_aIC.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .05,xend=2.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 2, y=.05, label="**",size=8) +
geom_segment(aes(x=2.75,y= .05,xend=3.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 3, y=.05, label="*",size=8) +
geom_segment(aes(x=3.75,y= .05,xend=4.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 4, y=.05, label="**",size=8) +
annotate(geom="text", x= 2 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 4 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D')
dev.off()
pdf("SSEP_ampdiff_aIC.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .05,xend=2.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 2, y=.05, label="**",size=8) +
geom_segment(aes(x=2.75,y= .05,xend=3.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 3, y=.05, label="*",size=8) +
geom_segment(aes(x=3.75,y= .05,xend=4.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 4, y=.05, label="**",size=8) +
annotate(geom="text", x= 2 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 4 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D')
dev.off()
## Ampdiff mIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIMA EXT/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_mIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
## Ampdiff mIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_mIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
ymin = -.125
ymax = .125
png("SSEP_ampdiff_mIC.png", units="in", width=6, height=4, res=300) # auto save
pdf("SSEP_ampdiff_mIC.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .05,xend=2.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 2, y=.05, label="**",size=8) +
geom_segment(aes(x=2.75,y= .05,xend=3.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 3, y=.05, label="**",size=8) +
geom_segment(aes(x=3.75,y= .05,xend=4.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 4, y=.05, label="***",size=8) +
annotate(geom="text", x= 2 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 + 0.95*0.5*0.5, y= 0, label="*",size=5,color = '#00BFC4') +
annotate(geom="text", x= 4 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 4 + 0.95*0.5*0.5, y= 0, label="*",size=5,color = '#00BFC4')
dev.off()
## Ampdiff aIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_aIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
ymin = -.125
ymax = .125
pdf("SSEP_ampdiff_aIC.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .05,xend=2.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 2, y=.05, label="**",size=8) +
geom_segment(aes(x=2.75,y= .05,xend=3.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 3, y=.05, label="*",size=8) +
geom_segment(aes(x=3.75,y= .05,xend=4.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 4, y=.05, label="**",size=8) +
annotate(geom="text", x= 2 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 4 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D')
dev.off()
## Ampdiff mIC: 3 lines PM, IM, TAP ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/ampdiff_mIC.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
ymin = -.125
ymax = .125
pdf("SSEP_ampdiff_mIC.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1.75,y= .05,xend=2.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 2, y=.05, label="**",size=8) +
geom_segment(aes(x=2.75,y= .05,xend=3.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 3, y=.05, label="**",size=8) +
geom_segment(aes(x=3.75,y= .05,xend=4.25,yend=.05))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 4, y=.05, label="***",size=8) +
annotate(geom="text", x= 2 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 3 + 0.95*0.5*0.5, y= 0, label="*",size=5,color = '#00BFC4') +
annotate(geom="text", x= 4 - 0.95*0.5*0.5, y= -.01, label="*",size=5,color = '#F8766D') +
annotate(geom="text", x= 4 + 0.95*0.5*0.5, y= 0, label="*",size=5,color = '#00BFC4')
dev.off()
## auditory-sound PLV: 1 line ##
Data = read.csv('/Volumes/TOSHIMA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/astimeplv.csv')
## auditory-sound PLV: 1 line ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/astimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
sigx = 1
sigxend = 2
sigy = .475
sigyend = sigy
ymin = .3
ymax = .6
pdf("astimePLV.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "PLV") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigy))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="*",size=8)
dev.off()
## motor-sound PLV: 3 lines ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mstimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
ymin = .3
ymax = .6
pdf("mstimePLV.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=1,y= .54,xend=4,yend=.54))+
annotate(geom="text", x= 0.5*(1 + 4), y=.54, label="**",size=8) +
geom_segment(aes(x=2,y= .57,xend=4,yend=.57))+
annotate(geom="text", x= 0.5*(2 + 4), y=.57, label="**",size=8) +
geom_segment(aes(x=3,y= .6,xend=4,yend=.6))+
annotate(geom="text", x= 0.5*(3 + 4), y=.6, label="*",size=8)
dev.off()
## auditory-motor PLV: 1 line ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/amtimeplv.csv')
long_Data <- gather(Data,MP,Amplitude,Bi_BL:Ter_TAP)
tidy_Data <- separate(long_Data, MP, c("Meter", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
sigx = 1
sigxend = 4
sigy = .4
sigyend = sigy
ymin = .3
ymax = .6
pdf("amtimePLV.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Meter)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
theme_minimal() +
labs(
x = "",
y = "Relative Amplitude (uV)") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("Bi","Ter"),
labels=c("Binary", "Ternary"))+
geom_segment(aes(x=sigx,y= sigy,xend=sigxend,yend=sigy))+ # add lines for ***s, 1 vs 3
annotate(geom="text", x= 0.5*(sigx + sigxend), y=sigy, label="*",size=8)
dev.off()
## delta band: 5 Lines ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/direction_phase_2-3Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom') + theme(axis.text=element_text(size=14)))
ymin = 0
ymax = 0.0035
pdf("SIFT_delta.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory")) +
geom_segment(aes(x=1,y= 0.0028,xend=2,yend=0.0028))+ # BL vs PM
annotate(geom="text", x= 0.5*(1 + 2), y=0.0028, label="*",size=8)+
geom_segment(aes(x=1,y= 0.0031,xend=3,yend=0.0031))+ # BL vs IM
annotate(geom="text", x= 0.5*(1 + 3), y=0.0031, label="*",size=8)+
geom_segment(aes(x=1,y= 0.0034,xend=4,yend=0.0034))+ # BL vs TAP
annotate(geom="text", x= 0.5*(1 + 4), y=0.0034, label="*",size=8)+
geom_segment(aes(x=1.75,y= 0.0023,xend=2.25,yend=0.0023))+ # am vs ma in PM
annotate(geom="text", x= 0.5*(1.75 + 2.25), y=0.0023, label="*",size=8)+
geom_segment(aes(x=2.75,y= 0.0025,xend=3.25,yend=0.0025))+ # am vs ma in IM
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=0.0025, label="*",size=8)
dev.off()
## delta band: 3 Lines 20201219 ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/direction_phase_2-3Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
theme_set(theme_minimal() + theme(legend.position = 'bottom'))
ymin = 0
ymax = 0.0035
pdf("SIFT_delta.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory")) +
geom_segment(aes(x=1,y= 0.0028,xend=2,yend=0.0028))+ # BL vs PM
annotate(geom="text", x= 0.5*(1 + 2), y=0.0028, label="*",size=8)+
geom_segment(aes(x=2.75,y= 0.0025,xend=3.25,yend=0.0025),colour = 'gray')+ # am vs ma in IM
annotate(geom="text", x= 0.5*(2.75 + 3.25), y=0.0025, label="*",size=8,colour = 'gray')+
geom_segment(aes(x=1,y= 0.0035,xend=4,yend=0.0035),colour = 'gray')+ # am vs ma in IM
annotate(geom="text", x= 0.5*(1 + 4), y=0.0035, label="*",size=8,colour = 'gray')
dev.off()
## alpha band: 0 Lines ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/direction_phase_8-12Hz.csv')
## alpha band: 0 Lines ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/mat2R/direction_phase_8-12Hz.csv')
## alpha band: 0 Lines ##
Data = read.csv('/Volumes/TOSHIBA/Research/Imagined_beats/real_exp/results/Main_task/R/Data/AM4b/direction_phase_8-12Hz.csv')
long_Data <- gather(Data,MP,Amplitude,am.BL:ma.TAP)
tidy_Data <- separate(long_Data, MP, c("Direction", "Phase"))
tidy_Data$Phase <- factor(tidy_Data$Phase,levels = c('BL','PM','IM','TAP')) # fix the order
pdf("SIFT_alpha.pdf", width=6, height=4) # auto save
tidy_Data %>%
ggplot(aes(x = Phase,
y = Amplitude,
fill = Direction)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
color = 'grey',
position=position_dodge(width=0.95)) +
coord_cartesian(ylim = c(ymin, ymax)) + # set the limit
labs(
x = "",
y = "") +
#    title = "SSEP of aIC")
scale_fill_discrete(breaks=c("am","ma"),
labels=c("Auditory to Motor", "Motor to Auditory"))
dev.off()
